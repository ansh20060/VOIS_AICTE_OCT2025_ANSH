# -*- coding: utf-8 -*-
"""ANSH_AIRBNB_CODE.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Hsd38v46N5J9LqClPJ_Ml9NmMG1qzeSO
"""

# Load the Excel file using the pre-defined read_all_sheets_from_excel for speed, then inspect unique values of property types
# Assumption: "room type" denotes the property type in this dataset (common in Airbnb-style data). We'll extract unique values from that column across sheets.
import pandas as pd

FILEPATH = r"C:\Users\Ansh\Downloads\VOIS PROJECT DATASET.xlsx"

df=pd.read_excel(FILEPATH)
for k, v in df.items():
    print('df: ' + k)
    print(v.head(15))

import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

# Clean column names to consistent lowercase for ease
df.columns = [c.strip().lower() for c in df.columns]

# Ensure price numeric
df['price'] = pd.to_numeric(df['price'], errors='coerce')

# Group by neighbourhood group
counts = df.groupby('neighbourhood group').size().sort_values(ascending=False)
avg_price = df.groupby('neighbourhood group')['price'].mean().sort_values(ascending=False)

print(counts.head())
print(avg_price.head())

# which neighbourhood group has the highets number of listings?
plt.figure(figsize=(7,4))
sns.barplot(x=counts.index, y=counts.values, palette='Blues_d')
plt.title('Listings by Neighbourhood Group')
plt.xlabel('Neighbourhood Group')
plt.ylabel('Number of Listings')
plt.xticks(rotation=30)
plt.tight_layout()
plt.show()

print('Computed listing counts and average prices, and displayed two plots')

# which neighbouhood groups has the highest average prices for airnb listings?
plt.figure(figsize=(7,4))
sns.barplot(x=avg_price.index, y=avg_price.values, palette='Greens_d')
plt.title('Average Price by Neighbourhood Group')
plt.xlabel('Neighbourhood Group')
plt.ylabel('Average Price')
plt.xticks(rotation=30)
plt.tight_layout()
plt.show()

#is there a relationship between the construction year of property and price?
try:
    df
except NameError:
    df = pd.read_excel('VOIS PROJECT DATASET.xlsx', sheet_name='in')

# Clean columns
df.columns = [c.strip().lower() for c in df.columns]

# Coerce numeric fields
num_cols = ['construction year','price','service fee','review rate number','calculated host listings count','availability 365']
for c in num_cols:
    if c in df.columns:
        df[c] = pd.to_numeric(df[c], errors='coerce')

# 1) Construction year vs price
plt.figure(figsize=(6,4))
sns.scatterplot(data=df, x='construction year', y='price', alpha=0.3)
sns.regplot(data=df, x='construction year', y='price', scatter=False, color='red')
plt.title('Price vs Construction Year')
plt.tight_layout()
plt.show()

# 2) Top 10 hosts by calculated host listings count
host_counts = df.groupby('host name')['calculated host listings count'].max().sort_values(ascending=False).head(10)
print(host_counts)
plt.figure(figsize=(7,4))
sns.barplot(x=host_counts.values, y=host_counts.index, palette='mako')
plt.title('Top 10 Hosts by Calculated Host Listings Count')
plt.xlabel('Listings Count')
plt.ylabel('Host Name')
plt.tight_layout()
plt.show()

# 3) Verified identity vs positive reviews (>=4)
import numpy as np
if 'host_identity_verified' in df.columns:
    df['positive_review'] = np.where(df['review rate number'] >= 4, 1, 0)
    id_rate = df.groupby('host_identity_verified')['positive_review'].mean().sort_values(ascending=False)
    print(id_rate)
    plt.figure(figsize=(5,4))
    sns.barplot(x=id_rate.index.astype(str), y=id_rate.values, palette='Set2')
    plt.title('Share of Positive Reviews by Host Identity Verification')
    plt.xlabel('Host Identity Verified')
    plt.ylabel('Share Positive Reviews')
    plt.ylim(0,1)
    plt.tight_layout()
    plt.show()

# 4) Price vs service fee correlation
corr_val = df[['price','service fee']].corr().iloc[0,1]
print(corr_val)
plt.figure(figsize=(6,4))
sns.scatterplot(data=df, x='price', y='service fee', alpha=0.3)
sns.regplot(data=df, x='price', y='service fee', scatter=False, color='red')
plt.title('Service Fee vs Price (corr = ' + str(round(corr_val, 3)) + ')')
plt.tight_layout()
plt.show()

# 5) Avg review rate number by neighbourhood group and room type
pivot_rt = df.pivot_table(index='neighbourhood group', columns='room type', values='review rate number', aggfunc='mean')
print(pivot_rt.head())
plt.figure(figsize=(7,4))
sns.heatmap(pivot_rt, annot=True, fmt='.2f', cmap='YlGnBu')
plt.title('Avg Review Rate by Neighbourhood Group and Room Type')
plt.tight_layout()
plt.show()

# 6) Host listings count vs availability
plt.figure(figsize=(6,4))
sns.scatterplot(data=df, x='calculated host listings count', y='availability 365', alpha=0.3)
sns.regplot(data=df, x='calculated host listings count', y='availability 365', scatter=False, color='red')
plt.title('Availability vs Host Listings Count')
plt.tight_layout()
plt.show()

